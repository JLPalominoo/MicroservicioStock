plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco'
}

jacoco {
	toolVersion = "0.8.8" // Usa la versión adecuada de JaCoCo
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // Generar el informe después de las pruebas
}

jacocoTestReport {
	dependsOn test // Asegurarse de que las pruebas se ejecuten antes de generar el informe
	reports {
		html.required = true
		xml.required = false
		csv.required = false
	}
}

group = 'com.api'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.mockito:mockito-core:5.4.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.4.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.0'

}

tasks.named('test') {
	useJUnitPlatform()
}

